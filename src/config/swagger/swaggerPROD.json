{
  "swagger": "2.0",
  "info": {
    "description": "API ShareYourIdea",
    "version": "1.0.0",
    "title": "Swagger ShareYourIdea",
    "contact": {
      "email": "rafael.guzman1609@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "https://nodejs-shareyouridea.herokuapp.com",
  "basePath": "/v1/api",
  "tags": [
    {
      "name": "Auth",
      "description": "Operations about auth"
    },
    {
      "name": "User",
      "description": "Operations about user"
    },
    {
      "name": "Idea",
      "description": "Everything your ideas"
    },
    {
      "name": "Comment",
      "description": "Everything your comments"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "paths": {
    "/auth/signIn": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Sign in",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "token": {
                    "type": "string"
                  },
                  "user": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "username": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Successful sign in",
          "schema": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                },
                "user": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "404":{
          "description": "User does not exists"
        },
        "400":{
          "description": "Invalid Password"
        }
      }
    },
    "/auth/signUp": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Sign up",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "User",
            "in": "body",
            "description": "",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "produces": [
        "application/json"
      ],
      "responses": {
        "200": {
          "description": "Successful sign up",
          "schema": {
            "$ref": "#/definitions/User"
          }
        },
        "400":{
          "description": "User already exists"
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Finds All the Users",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageNum",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "name": "pageSize",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header for JWT",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Find one user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header for JWT",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update one user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header for JWT",
            "required": true,
            "type": "string"
          },
          {
            "name": "Update User",
            "in": "body",
            "description": "Update User",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string"
                },
                "username": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/User"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete one user",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header for JWT",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    },
    "/idea": {
      "get": {
        "tags": [
          "Idea"
        ],
        "summary": "Finds All the Ideas",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageNum",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "name": "pageSize",
            "type": "number",
            "in": "query",
            "required": false
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header for JWT",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Idea"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      },
      "post":{
        "tags": [
          "Idea"
        ],
        "summary": "Create one idea",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header for JWT",
            "required": true,
            "type": "string"
          },
          {
            "name": "Create idea",
            "in": "body",
            "description": "create idea",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "idea": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "author":{
                  "type":"string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Idea"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    },
    "/idea/{ideaId}": {
      "get": {
        "tags": [
          "Idea"
        ],
        "summary": "Find one Idea",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ideaId",
            "in": "path",
            "type": "string",
            "description": "Idea Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header for JWT",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Idea"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "patch": {
        "tags": [
          "Idea"
        ],
        "summary": "Update one idea",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ideaId",
            "in": "path",
            "type": "string",
            "description": "Idea Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header for JWT",
            "required": true,
            "type": "string"
          },
          {
            "name": "Update Idea",
            "in": "body",
            "description": "Update Idea",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "idea": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Idea"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "delete": {
        "tags": [
          "Idea"
        ],
        "summary": "Delete one idea",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ideaId",
            "in": "path",
            "type": "string",
            "description": "Idea Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header for JWT",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    },
    "/idea/{userId}/all":{
      "get": {
        "tags": [
          "Idea"
        ],
        "summary": "Find Users Ideas",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "type": "string",
            "description": "User Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header for JWT",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Idea"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    },
    "/comment/{ideaId}": {
      "get": {
        "tags": [
          "Comment"
        ],
        "summary": "Find Comments",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ideaId",
            "in": "path",
            "type": "string",
            "description": "Idea Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header for JWT",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "post":{
        "tags": [
          "Comment"
        ],
        "summary": "Create one comment",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ideaId",
            "in": "path",
            "type": "string",
            "description": "Idea Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header for JWT",
            "required": true,
            "type": "string"
          },
          {
            "name": "Create comment",
            "in": "body",
            "description": "create comment",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                },
                "author":{
                  "type":"string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    },
    "/comment/{commentId}":{
      "patch": {
        "tags": [
          "Comment"
        ],
        "summary": "Update comment",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "type": "string",
            "description": "Comment Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization header fOr JWT",
            "required": true,
            "type": "string"
          },
          {
            "name": "Update Idea",
            "in": "body",
            "description": "Update Idea",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "comment": {
                  "type": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Comment"
              }
            }
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      },
      "delete": {
        "tags": [
          "Comment"
        ],
        "summary": "Delete one comment",
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "commentId",
            "in": "path",
            "type": "string",
            "description": "Comment Id",
            "required": true
          },
          {
            "in": "header",
            "name": "Authorization",
            "description": "Authorization token jwt",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation"
          },
          "400": {
            "description": "Invalid tag value"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "username": {
          "type": "string"
        }
      }
    },
    "Idea":{
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "idea": {
          "type": "string"
        },
        "description":{
          "type": "string"
        },
        "author":{
          "type":"object",
          "properties":{
            "_id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          }
        }
      }
    },
    "Comment":{
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        },
        "ideaId":{
          "type": "string"
        },
        "author":{
          "type":"object",
          "properties":{
            "_id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "username": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}